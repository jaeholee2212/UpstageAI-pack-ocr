#!/bin/bash

command=${1}
shift

# Load `.env` into the current run context since `docker stack` does not
# respect dot-files unfortunately.
export $(cat .env) > /dev/null 2>&1;

ensure_network() {
  local name=$1
  shift
  local filtered=$(docker network ls --filter name=$name --format {{.Name}})
  if [[ $name = $filtered ]]; then
    return 0
  fi
  echo "network: created - $(docker network create $@ $name)"
}

ensure_plugin_installed() {
  local name=$1
  local filtered=$(docker plugin ls --format {{.Name}} | grep ${name})
  if [[ $name = $filtered ]]; then
    return 0
  fi
  docker plugin install ${name}
  if [[ $? ]]; then
    echo "[plugin]: installed - ${name}"
  fi
  echo "[plugin]: failed to install"
  exit 1
}

case ${command} in
  lb)
    ./stack.sh lb infra_lb.yaml $@
    ;;
  logs)
    ./stack.sh logs infra_logs.yaml $@
    ;;
  db)
    ./stack.sh db infra_db.yaml $@
    ;;
  admin)
    ./stack.sh admin infra_admin.yaml $@
    ;;
  node)
    nodeid=$(docker info -f '{{.Swarm.NodeID}}')
    subcmd=$1
    shift
    case ${subcmd} in
      id)
        echo ${nodeid}
        ;;
      add-label)
        docker node update --label-add $@ ${nodeid}
        echo "node labels: $(docker node inspect --format '{{.Spec.Labels}}' ${nodeid})"
        ;;
    esac
    ;;
  init)
    mkdir -p ${PWD}/data/es
    mkdir -p ${PWD}/data/traefik/cert
    mkdir -p ${PWD}/data/couchdb
    mkdir -p ${PWD}/data/influxdb
    ;;
  bootup)
    echo "[bootup]: swarm advertise address - ${INFRA_SWARM_ADVERTISE_ADDR}"
    docker swarm init --advertise-addr=${INFRA_SWARM_ADVERTISE_ADDR}

    echo "[bootup]: make sure the network plugin 'weave' installed"
    weave=weaveworks/net-plugin:latest_release
    ensure_plugin_installed ${weave}
    docker plugin disable ${weave} \
      && docker plugin set ${weave} WEAVE_PASSWORD=1234 WEAVE_MULTICAST=1 \
      && docker plugin enable ${weave}
    if [[ $? ]]; then
      echo "[bootup]: plugin launched"
    else
      echo "[bootup]: failed to enable the plugin ${weave}"
      exit 1
    fi

    echo "[bootup]: creating mesh networks"
    ensure_network 'infra-public' --driver=overlay --attachable
    ensure_network 'infra-private' --driver=${weave} --attachable

    echo "[bootup]: initialize data/storage folders"
    mkdir -p ${PWD}/data/es
    mkdir -p ${PWD}/data/traefik/cert
    mkdir -p ${PWD}/data/couchdb
    mkdir -p ${PWD}/data/influxdb
    echo "[bootup]: ok"
    ;;
  *)
    echo "info node id -- node id"
    ;;
esac


